// Generated by purs version 0.15.10
import * as Control_Applicative from "../Control.Applicative/index.js";
import * as Control_Bind from "../Control.Bind/index.js";
import * as Data_Identity from "../Data.Identity/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_These from "../Data.These/index.js";
import * as Parsing from "../Parsing/index.js";
import * as Parsing_Combinators from "../Parsing.Combinators/index.js";
import * as URI_Common from "../URI.Common/index.js";
import * as URI_Host from "../URI.Host/index.js";
import * as URI_Port from "../URI.Port/index.js";
var bind = /* #__PURE__ */ Control_Bind.bind(Parsing.bindParserT);
var wrapParser = /* #__PURE__ */ URI_Common.wrapParser(Data_Identity.monadIdentity);
var pure = /* #__PURE__ */ Control_Applicative.pure(Parsing.applicativeParserT);
var print = function (printHost) {
    return function (printPort) {
        return function (v) {
            if (v instanceof Data_Maybe.Nothing) {
                return "";
            };
            if (v instanceof Data_Maybe.Just && v.value0 instanceof Data_These.This) {
                return URI_Host.print(printHost(v.value0.value0));
            };
            if (v instanceof Data_Maybe.Just && v.value0 instanceof Data_These.That) {
                return URI_Port.print(printPort(v.value0.value0));
            };
            if (v instanceof Data_Maybe.Just && v.value0 instanceof Data_These.Both) {
                return URI_Host.print(printHost(v.value0.value0)) + URI_Port.print(printPort(v.value0.value1));
            };
            throw new Error("Failed pattern match at URI.HostPortPair (line 58, column 29 - line 66, column 63): " + [ v.constructor.name ]);
        };
    };
};
var parser = function (parseHost) {
    return function (parsePort) {
        return bind(Parsing_Combinators.optionMaybe(wrapParser(parseHost)(URI_Host.parser)))(function (mh) {
            return bind(Parsing_Combinators.optionMaybe(wrapParser(parsePort)(URI_Port.parser)))(function (mp) {
                return pure((function () {
                    if (mh instanceof Data_Maybe.Just && mp instanceof Data_Maybe.Nothing) {
                        return new Data_Maybe.Just(new Data_These.This(mh.value0));
                    };
                    if (mh instanceof Data_Maybe.Nothing && mp instanceof Data_Maybe.Just) {
                        return new Data_Maybe.Just(new Data_These.That(mp.value0));
                    };
                    if (mh instanceof Data_Maybe.Just && mp instanceof Data_Maybe.Just) {
                        return new Data_Maybe.Just(new Data_These.Both(mh.value0, mp.value0));
                    };
                    if (mh instanceof Data_Maybe.Nothing && mp instanceof Data_Maybe.Nothing) {
                        return Data_Maybe.Nothing.value;
                    };
                    throw new Error("Failed pattern match at URI.HostPortPair (line 41, column 8 - line 45, column 32): " + [ mh.constructor.name, mp.constructor.name ]);
                })());
            });
        });
    };
};
export {
    parser,
    print
};
