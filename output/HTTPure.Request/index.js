// Generated by purs version 0.15.10
import * as Control_Applicative from "../Control.Applicative/index.js";
import * as Control_Bind from "../Control.Bind/index.js";
import * as Data_String_Common from "../Data.String.Common/index.js";
import * as Effect_Aff from "../Effect.Aff/index.js";
import * as Effect_Class from "../Effect.Class/index.js";
import * as Foreign_Object from "../Foreign.Object/index.js";
import * as HTTPure_Body from "../HTTPure.Body/index.js";
import * as HTTPure_Headers from "../HTTPure.Headers/index.js";
import * as HTTPure_Method from "../HTTPure.Method/index.js";
import * as HTTPure_MultiHeaders from "../HTTPure.MultiHeaders/index.js";
import * as HTTPure_Path from "../HTTPure.Path/index.js";
import * as HTTPure_Query from "../HTTPure.Query/index.js";
import * as HTTPure_Utils from "../HTTPure.Utils/index.js";
import * as HTTPure_Version from "../HTTPure.Version/index.js";
import * as Node_HTTP from "../Node.HTTP/index.js";
var bind = /* #__PURE__ */ Control_Bind.bind(Effect_Aff.bindAff);
var liftEffect = /* #__PURE__ */ Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
var pure = /* #__PURE__ */ Control_Applicative.pure(Effect_Aff.applicativeAff);
var fullPath = function (request) {
    var stringifyQueryParam = function (key) {
        return function (value) {
            return HTTPure_Utils["encodeURIComponent"](key) + ("=" + HTTPure_Utils["encodeURIComponent"](value));
        };
    };
    var questionMark = (function () {
        var $4 = Foreign_Object.isEmpty(request.query);
        if ($4) {
            return "";
        };
        return "?";
    })();
    var queryParamsArr = Foreign_Object.toArrayWithKey(stringifyQueryParam)(request.query);
    var queryParams = Data_String_Common.joinWith("&")(queryParamsArr);
    var path = Data_String_Common.joinWith("/")(request.path);
    return "/" + (path + (questionMark + queryParams));
};
var fromHTTPRequest = function (request) {
    return bind(liftEffect(HTTPure_Body.read(request)))(function (body) {
        return pure({
            method: HTTPure_Method.read(request),
            path: HTTPure_Path.read(request),
            query: HTTPure_Query.read(request),
            headers: HTTPure_Headers.read(request),
            multiHeaders: HTTPure_MultiHeaders.read(request),
            body: body,
            httpVersion: HTTPure_Version.read(request),
            url: Node_HTTP.requestURL(request)
        });
    });
};
export {
    fromHTTPRequest,
    fullPath
};
