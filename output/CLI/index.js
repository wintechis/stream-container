// Generated by purs version 0.15.10
import * as Control_Applicative from "../Control.Applicative/index.js";
import * as Control_Apply from "../Control.Apply/index.js";
import * as Control_Bind from "../Control.Bind/index.js";
import * as Control_Category from "../Control.Category/index.js";
import * as Data_Array from "../Data.Array/index.js";
import * as Data_Either from "../Data.Either/index.js";
import * as Data_Eq from "../Data.Eq/index.js";
import * as Data_Functor from "../Data.Functor/index.js";
import * as Data_Int from "../Data.Int/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_Ord from "../Data.Ord/index.js";
import * as Data_Ordering from "../Data.Ordering/index.js";
import * as Data_Semigroup from "../Data.Semigroup/index.js";
import * as Data_Show from "../Data.Show/index.js";
import * as Data_String_CodeUnits from "../Data.String.CodeUnits/index.js";
import * as Data_String_Common from "../Data.String.Common/index.js";
import * as Data_String_NonEmpty_Internal from "../Data.String.NonEmpty.Internal/index.js";
import * as Data_These from "../Data.These/index.js";
import * as Data_Time_Duration from "../Data.Time.Duration/index.js";
import * as Data_Traversable from "../Data.Traversable/index.js";
import * as Options_Applicative_Builder from "../Options.Applicative.Builder/index.js";
import * as Options_Applicative_Builder_Internal from "../Options.Applicative.Builder.Internal/index.js";
import * as Options_Applicative_Extra from "../Options.Applicative.Extra/index.js";
import * as Options_Applicative_Internal_Utils from "../Options.Applicative.Internal.Utils/index.js";
import * as Options_Applicative_Types from "../Options.Applicative.Types/index.js";
import * as Parsing from "../Parsing/index.js";
import * as RDF from "../RDF/index.js";
import * as RDF_Prefixes from "../RDF.Prefixes/index.js";
import * as Type_Proxy from "../Type.Proxy/index.js";
import * as URI_Authority from "../URI.Authority/index.js";
import * as URI_HierarchicalPart from "../URI.HierarchicalPart/index.js";
import * as URI_Host from "../URI.Host/index.js";
import * as URI_Host_RegName from "../URI.Host.RegName/index.js";
import * as URI_HostPortPair from "../URI.HostPortPair/index.js";
import * as URI_Port from "../URI.Port/index.js";
import * as URI_Scheme_Common from "../URI.Scheme.Common/index.js";
import * as URI_URI from "../URI.URI/index.js";
var show = /* #__PURE__ */ Data_Show.show(Data_Show.showInt);
var append1 = /* #__PURE__ */ Data_Semigroup.append(Options_Applicative_Builder_Internal.modSemigroup);
var $$long = /* #__PURE__ */ Options_Applicative_Builder["long"](Options_Applicative_Builder_Internal.optionFieldsHasName);
var $$short = /* #__PURE__ */ Options_Applicative_Builder["short"](Options_Applicative_Builder_Internal.optionFieldsHasName);
var metavar = /* #__PURE__ */ Options_Applicative_Builder.metavar(Options_Applicative_Builder_Internal.optionFieldsHasMetavar);
var pure = /* #__PURE__ */ Control_Applicative.pure(Data_Either.applicativeEither);
var identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);
var map = /* #__PURE__ */ Data_Functor.map(Options_Applicative_Types.readMFunctor);
var value = /* #__PURE__ */ Options_Applicative_Builder.value(Options_Applicative_Builder_Internal.optionFieldsHasValue);
var bind = /* #__PURE__ */ Control_Bind.bind(Data_Maybe.bindMaybe);
var showDefault = /* #__PURE__ */ Options_Applicative_Builder.showDefault(RDF.showTerm);
var eq = /* #__PURE__ */ Data_Eq.eq(Data_Time_Duration.eqSeconds);
var eq1 = /* #__PURE__ */ Data_Eq.eq(RDF.eqTerm);
var compare = /* #__PURE__ */ Data_Ord.compare(Data_Time_Duration.ordSeconds);
var compare1 = /* #__PURE__ */ Data_Ord.compare(RDF.ordTerm);
var map1 = /* #__PURE__ */ Data_Functor.map(Data_Maybe.functorMaybe);
var map2 = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorArray);
var sequence = /* #__PURE__ */ Data_Traversable.sequence(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe);
var apply = /* #__PURE__ */ Control_Apply.apply(Options_Applicative_Types.parserApply);
var Window = /* #__PURE__ */ (function () {
    function Window(value0) {
        this.value0 = value0;
    };
    Window.create = function (value0) {
        return new Window(value0);
    };
    return Window;
})();
var DataProvider = /* #__PURE__ */ (function () {
    function DataProvider(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    DataProvider.create = function (value0) {
        return function (value1) {
            return new DataProvider(value0, value1);
        };
    };
    return DataProvider;
})();
var windowReader = /* #__PURE__ */ (function () {
    var parse = function (string) {
        var v = Data_String_Common.split(" ")(string);
        if (v.length === 3) {
            var v1 = Data_Int.fromString(v[1]);
            if (v1 instanceof Data_Maybe.Nothing) {
                return new Data_Either.Left("Start of window \"" + (v[1] + "\" is not an integer!"));
            };
            if (v1 instanceof Data_Maybe.Just) {
                var v2 = Data_Int.fromString(v[2]);
                if (v2 instanceof Data_Maybe.Nothing) {
                    return new Data_Either.Left("End of window \"" + (v[2] + "\" is not an integer!"));
                };
                if (v2 instanceof Data_Maybe.Just) {
                    return new Data_Either.Right(new Window({
                        membershipResource: RDF.namedNode(v[0]),
                        start: Data_Int.toNumber(v1.value0),
                        end: Data_Int.toNumber(v2.value0)
                    }));
                };
                throw new Error("Failed pattern match at CLI (line 140, column 23 - line 146, column 12): " + [ v2.constructor.name ]);
            };
            throw new Error("Failed pattern match at CLI (line 138, column 57 - line 146, column 12): " + [ v1.constructor.name ]);
        };
        return new Data_Either.Left("Window specifications needs 7 compontens, " + (show(Data_Array.length(v)) + " were given!"));
    };
    return Options_Applicative_Builder.eitherReader(parse);
})();
var windows = /* #__PURE__ */ Options_Applicative_Types.many(/* #__PURE__ */ Options_Applicative_Builder.option(windowReader)(/* #__PURE__ */ append1(/* #__PURE__ */ $$long("window"))(/* #__PURE__ */ append1(/* #__PURE__ */ $$short("w"))(/* #__PURE__ */ append1(/* #__PURE__ */ metavar("MEMBERSHIP_RESOURCE START END"))(/* #__PURE__ */ Options_Applicative_Builder.help("A window for the Stream Container to start with."))))));
var uriOptions = {
    parseUserInfo: pure,
    printUserInfo: identity,
    parseHosts: /* #__PURE__ */ URI_HostPortPair.parser(pure)(pure),
    printHosts: /* #__PURE__ */ URI_HostPortPair.print(identity)(identity),
    parsePath: pure,
    printPath: identity,
    parseHierPath: pure,
    printHierPath: identity,
    parseQuery: pure,
    printQuery: identity,
    parseFragment: pure,
    printFragment: identity
};
var predicate = /* #__PURE__ */ (function () {
    return Options_Applicative_Builder.option(map(Data_Functor.map(Data_Functor.functorFn)(Data_Maybe.Just.create)(RDF.namedNode))(Options_Applicative_Builder.str))(append1($$long("predicate"))(append1($$short("p"))(append1(metavar("URI"))(append1(value(Data_Maybe.Nothing.value))(Options_Applicative_Builder.help("Predicate that is assigned to the stream container (purely informative)."))))));
})();
var port = /* #__PURE__ */ Options_Applicative_Builder.option(/* #__PURE__ */ Options_Applicative_Builder.maybeReader(function (s) {
    return bind(Data_Int.fromString(s))(URI_Port.fromInt);
}))(/* #__PURE__ */ append1(/* #__PURE__ */ $$long("port"))(/* #__PURE__ */ append1(/* #__PURE__ */ $$short("P"))(/* #__PURE__ */ append1(/* #__PURE__ */ metavar("PORT"))(/* #__PURE__ */ append1(/* #__PURE__ */ Options_Applicative_Builder.showDefaultWith(URI_Port.print))(/* #__PURE__ */ append1(/* #__PURE__ */ value(/* #__PURE__ */ URI_Port.unsafeFromInt(8080)))(/* #__PURE__ */ Options_Applicative_Builder.help("The port for the stream container to listen on.")))))));
var poisonRelation = /* #__PURE__ */ Options_Applicative_Builder.option(/* #__PURE__ */ map(RDF.namedNode)(Options_Applicative_Builder.str))(/* #__PURE__ */ append1(/* #__PURE__ */ $$long("poison-relation"))(/* #__PURE__ */ append1(/* #__PURE__ */ $$short("r"))(/* #__PURE__ */ append1(/* #__PURE__ */ metavar("URI"))(/* #__PURE__ */ append1(showDefault)(/* #__PURE__ */ append1(/* #__PURE__ */ value(/* #__PURE__ */ RDF.namedNode("http://vocab.ex.org/isPoisoned")))(/* #__PURE__ */ Options_Applicative_Builder.help("The ldpsc:hasPoisonRelation.")))))));
var memberRelation = /* #__PURE__ */ Options_Applicative_Builder.option(/* #__PURE__ */ map(RDF.namedNode)(Options_Applicative_Builder.str))(/* #__PURE__ */ append1(/* #__PURE__ */ $$long("member-relation"))(/* #__PURE__ */ append1(/* #__PURE__ */ $$short("m"))(/* #__PURE__ */ append1(/* #__PURE__ */ metavar("URI"))(/* #__PURE__ */ append1(showDefault)(/* #__PURE__ */ append1(/* #__PURE__ */ value(/* #__PURE__ */ RDF.namedNode("http://vocab.ex.org/inWindow")))(/* #__PURE__ */ Options_Applicative_Builder.help("The ldp:hasMemberRelation.")))))));
var hostname = /* #__PURE__ */ (function () {
    return Options_Applicative_Builder.option(Options_Applicative_Builder.maybeReader(function (s) {
        return Data_Either.hush(Parsing.runParser(s)(URI_Host.parser));
    }))(append1($$long("hostname"))(append1($$short("H"))(append1(metavar("HOSTNAME"))(append1(Options_Applicative_Builder.showDefaultWith(URI_Host.print))(append1(value(new URI_Host.NameAddress(URI_Host_RegName.fromString(Data_String_NonEmpty_Internal.nes(Data_String_NonEmpty_Internal.nonEmptyNonEmpty({
        reflectSymbol: function () {
            return "localhost";
        }
    }))(Type_Proxy["Proxy"].value)))))(Options_Applicative_Builder.help("The hostname under which the stream container shall run.")))))));
})();
var grace = /* #__PURE__ */ Options_Applicative_Builder.option(Options_Applicative_Builder["int"])(/* #__PURE__ */ append1(/* #__PURE__ */ $$long("grace"))(/* #__PURE__ */ append1(/* #__PURE__ */ $$short("g"))(/* #__PURE__ */ append1(/* #__PURE__ */ metavar("SECONDS"))(/* #__PURE__ */ append1(/* #__PURE__ */ value(10))(/* #__PURE__ */ append1(/* #__PURE__ */ Options_Applicative_Builder.showDefault(Data_Show.showInt))(/* #__PURE__ */ Options_Applicative_Builder.help("How many seconds should data points be retained after they are out of the last window.")))))));
var eqWindow = {
    eq: function (x) {
        return function (y) {
            return eq(x.value0.end)(y.value0.end) && eq1(x.value0.membershipResource)(y.value0.membershipResource) && eq(x.value0.start)(y.value0.start);
        };
    }
};
var ordWindow = {
    compare: function (x) {
        return function (y) {
            var v = compare(x.value0.end)(y.value0.end);
            if (v instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if (v instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            var v1 = compare1(x.value0.membershipResource)(y.value0.membershipResource);
            if (v1 instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if (v1 instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            return compare(x.value0.start)(y.value0.start);
        };
    },
    Eq0: function () {
        return eqWindow;
    }
};
var dataProviderReader = /* #__PURE__ */ (function () {
    var parse = function (s) {
        return Data_Either.note("Not able to parse data provider!")(bind(Data_Array.head(Data_String_Common.split(" ")(s)))(function (subject) {
            return bind(map1(Data_String_Common.joinWith(""))(Data_Array.tail(Data_String_Common.split(" ")(s))))(function (objectList) {
                return bind(Data_String_CodeUnits.stripPrefix("[")(objectList))(function (oL) {
                    return bind(Data_String_CodeUnits.stripSuffix("]")(oL))(function (oL$prime) {
                        var objects = map2(Data_String_Common.trim)(Data_String_Common.split(",")(oL$prime));
                        var objectTerms = (function () {
                            var v = sequence(map2(Data_Int.fromString)(objects));
                            if (v instanceof Data_Maybe.Nothing) {
                                return map2(RDF.namedNode)(objects);
                            };
                            if (v instanceof Data_Maybe.Just) {
                                return map2(function (i) {
                                    return RDF.literalType(i)(RDF["namedNode$prime"](RDF_Prefixes.xsd)("integer"));
                                })(objects);
                            };
                            throw new Error("Failed pattern match at CLI (line 113, column 25 - line 115, column 83): " + [ v.constructor.name ]);
                        })();
                        return new Data_Maybe.Just(new DataProvider(RDF.namedNode(subject), objectTerms));
                    });
                });
            });
        }));
    };
    return Options_Applicative_Builder.eitherReader(parse);
})();
var dataProviders = /* #__PURE__ */ Options_Applicative_Types.many(/* #__PURE__ */ Options_Applicative_Builder.option(dataProviderReader)(/* #__PURE__ */ append1(/* #__PURE__ */ $$long("data-provider"))(/* #__PURE__ */ append1(/* #__PURE__ */ $$short("d"))(/* #__PURE__ */ append1(/* #__PURE__ */ metavar("SUBJECT_URI OBJECT_LIST"))(/* #__PURE__ */ Options_Applicative_Builder.help("Subject and list of objects that the stream container should simulate."))))));
var contentTimestampRelation = /* #__PURE__ */ Options_Applicative_Builder.option(/* #__PURE__ */ map(RDF.namedNode)(Options_Applicative_Builder.str))(/* #__PURE__ */ append1(/* #__PURE__ */ $$long("content-timestamp-relation"))(/* #__PURE__ */ append1(/* #__PURE__ */ $$short("t"))(/* #__PURE__ */ append1(/* #__PURE__ */ metavar("URI"))(/* #__PURE__ */ append1(showDefault)(/* #__PURE__ */ append1(/* #__PURE__ */ value(/* #__PURE__ */ RDF.namedNode("http://vocab.ex.org/hasTimestamp")))(/* #__PURE__ */ Options_Applicative_Builder.help("The ldpsc:contentTimestampRelation.")))))));
var contentPoisonRelation = /* #__PURE__ */ Options_Applicative_Builder.option(/* #__PURE__ */ map(RDF.namedNode)(Options_Applicative_Builder.str))(/* #__PURE__ */ append1(/* #__PURE__ */ $$long("content-poison-relation"))(/* #__PURE__ */ append1(/* #__PURE__ */ $$short("c"))(/* #__PURE__ */ append1(/* #__PURE__ */ metavar("URI"))(/* #__PURE__ */ append1(showDefault)(/* #__PURE__ */ append1(/* #__PURE__ */ value(/* #__PURE__ */ RDF.namedNode("http://vocab.ex.org/hasPoison")))(/* #__PURE__ */ Options_Applicative_Builder.help("The ldpsc:contentPoisonRelation.")))))));
var opts = /* #__PURE__ */ apply(/* #__PURE__ */ apply(/* #__PURE__ */ apply(/* #__PURE__ */ apply(/* #__PURE__ */ apply(/* #__PURE__ */ apply(/* #__PURE__ */ apply(/* #__PURE__ */ apply(/* #__PURE__ */ apply(/* #__PURE__ */ Data_Functor.map(Options_Applicative_Types.parserFunctor)(function (v) {
    return function (v1) {
        return function (v2) {
            return function (v3) {
                return function (v4) {
                    return function (v5) {
                        return function (v6) {
                            return function (v7) {
                                return function (v8) {
                                    return function (v9) {
                                        return {
                                            uri: new URI_URI.URI(URI_Scheme_Common.http, new URI_HierarchicalPart.HierarchicalPartAuth(new URI_Authority.Authority(Data_Maybe.Nothing.value, new Data_Maybe.Just(new Data_These.Both(v, v1))), [  ]), Data_Maybe.Nothing.value, Data_Maybe.Nothing.value),
                                            predicate: v2,
                                            grace: v3,
                                            dataProviders: v4,
                                            memberRelation: v5,
                                            contentTimestampRelation: v6,
                                            poisonRelation: v7,
                                            contentPoisonRelation: v8,
                                            windows: v9
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
})(hostname))(port))(predicate))(grace))(dataProviders))(memberRelation))(contentTimestampRelation))(poisonRelation))(contentPoisonRelation))(windows);
var optsInfo = /* #__PURE__ */ Options_Applicative_Builder.info(/* #__PURE__ */ Options_Applicative_Internal_Utils.apApplyFlipped(Options_Applicative_Types.parserApply)(opts)(Options_Applicative_Extra.helper))(/* #__PURE__ */ Data_Semigroup.append(Options_Applicative_Builder.infoModSemigroup)(Options_Applicative_Builder.briefDesc)(/* #__PURE__ */ Options_Applicative_Builder.progDesc("Start a Stream Container web server")));
export {
    Window,
    DataProvider,
    uriOptions,
    optsInfo,
    opts,
    hostname,
    port,
    predicate,
    grace,
    dataProviders,
    dataProviderReader,
    memberRelation,
    contentTimestampRelation,
    poisonRelation,
    contentPoisonRelation,
    windows,
    windowReader,
    eqWindow,
    ordWindow
};
