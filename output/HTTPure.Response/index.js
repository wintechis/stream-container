// Generated by purs version 0.15.10
import * as Control_Bind from "../Control.Bind/index.js";
import * as Data_Semigroup from "../Data.Semigroup/index.js";
import * as Effect_Aff_Class from "../Effect.Aff.Class/index.js";
import * as Effect_Class from "../Effect.Class/index.js";
import * as HTTPure_Body from "../HTTPure.Body/index.js";
import * as HTTPure_Headers from "../HTTPure.Headers/index.js";
import * as HTTPure_MultiHeaders from "../HTTPure.MultiHeaders/index.js";
import * as HTTPure_Status from "../HTTPure.Status/index.js";
var discard = /* #__PURE__ */ Control_Bind.discard(Control_Bind.discardUnit);
var append = /* #__PURE__ */ Data_Semigroup.append(HTTPure_MultiHeaders.semigroupMultiHeaders);
var append1 = /* #__PURE__ */ Data_Semigroup.append(HTTPure_Headers.semigroupHeaders);
var send = function (dictMonadEffect) {
    return function (dictMonadAff) {
        var MonadEffect0 = dictMonadAff.MonadEffect0();
        var discard1 = discard((MonadEffect0.Monad0()).Bind1());
        var liftEffect = Effect_Class.liftEffect(MonadEffect0);
        var liftAff = Effect_Aff_Class.liftAff(dictMonadAff);
        return function (httpresponse) {
            return function (v) {
                return discard1(liftEffect(HTTPure_Status.write(httpresponse)(v.status)))(function () {
                    return discard1(liftEffect(HTTPure_MultiHeaders.write(httpresponse)(append(HTTPure_MultiHeaders.fromHeaders(v.headers))(v.multiHeaders))))(function () {
                        return liftAff(v.writeBody(httpresponse));
                    });
                });
            };
        };
    };
};
var response$prime = function (dictMonadAff) {
    var liftEffect = Effect_Class.liftEffect(dictMonadAff.MonadEffect0());
    return function (dictBody) {
        var defaultHeaders = HTTPure_Body.defaultHeaders(dictBody);
        var write = HTTPure_Body.write(dictBody);
        return function (status) {
            return function (headers) {
                return function (body) {
                    return liftEffect(function __do() {
                        var defaultHeaders$prime = defaultHeaders(body)();
                        return {
                            status: status,
                            headers: append1(defaultHeaders$prime)(headers),
                            multiHeaders: HTTPure_MultiHeaders.empty,
                            writeBody: write(body)
                        };
                    });
                };
            };
        };
    };
};
var seeOther$prime = function (dictMonadAff) {
    var response$prime1 = response$prime(dictMonadAff);
    return function (dictBody) {
        return response$prime1(dictBody)(HTTPure_Status.seeOther);
    };
};
var seeOther = function (dictMonadAff) {
    var seeOther$prime1 = seeOther$prime(dictMonadAff);
    return function (dictBody) {
        return seeOther$prime1(dictBody)(HTTPure_Headers.empty);
    };
};
var temporaryRedirect$prime = function (dictMonadAff) {
    var response$prime1 = response$prime(dictMonadAff);
    return function (dictBody) {
        return response$prime1(dictBody)(HTTPure_Status.temporaryRedirect);
    };
};
var temporaryRedirect = function (dictMonadAff) {
    var temporaryRedirect$prime1 = temporaryRedirect$prime(dictMonadAff);
    return function (dictBody) {
        return temporaryRedirect$prime1(dictBody)(HTTPure_Headers.empty);
    };
};
var useProxy$prime = function (dictMonadAff) {
    var response$prime1 = response$prime(dictMonadAff);
    return function (dictBody) {
        return response$prime1(dictBody)(HTTPure_Status.useProxy);
    };
};
var useProxy = function (dictMonadAff) {
    var useProxy$prime1 = useProxy$prime(dictMonadAff);
    return function (dictBody) {
        return useProxy$prime1(dictBody)(HTTPure_Headers.empty);
    };
};
var response = function (dictMonadAff) {
    var response$prime1 = response$prime(dictMonadAff);
    return function (dictBody) {
        var response$prime2 = response$prime1(dictBody);
        return function (status) {
            return response$prime2(status)(HTTPure_Headers.empty);
        };
    };
};
var permanentRedirect$prime = function (dictMonadAff) {
    var response$prime1 = response$prime(dictMonadAff);
    return function (dictBody) {
        return response$prime1(dictBody)(HTTPure_Status.permanentRedirect);
    };
};
var permanentRedirect = function (dictMonadAff) {
    var permanentRedirect$prime1 = permanentRedirect$prime(dictMonadAff);
    return function (dictBody) {
        return permanentRedirect$prime1(dictBody)(HTTPure_Headers.empty);
    };
};
var partialContent$prime = function (dictMonadAff) {
    var response$prime1 = response$prime(dictMonadAff);
    return function (dictBody) {
        return response$prime1(dictBody)(HTTPure_Status.partialContent);
    };
};
var partialContent = function (dictMonadAff) {
    var partialContent$prime1 = partialContent$prime(dictMonadAff);
    return function (dictBody) {
        return partialContent$prime1(dictBody)(HTTPure_Headers.empty);
    };
};
var ok$prime = function (dictMonadAff) {
    var response$prime1 = response$prime(dictMonadAff);
    return function (dictBody) {
        return response$prime1(dictBody)(HTTPure_Status.ok);
    };
};
var ok = function (dictMonadAff) {
    var ok$prime1 = ok$prime(dictMonadAff);
    return function (dictBody) {
        return ok$prime1(dictBody)(HTTPure_Headers.empty);
    };
};
var nonAuthoritativeInformation$prime = function (dictMonadAff) {
    var response$prime1 = response$prime(dictMonadAff);
    return function (dictBody) {
        return response$prime1(dictBody)(HTTPure_Status.nonAuthoritativeInformation);
    };
};
var nonAuthoritativeInformation = function (dictMonadAff) {
    var nonAuthoritativeInformation$prime1 = nonAuthoritativeInformation$prime(dictMonadAff);
    return function (dictBody) {
        return nonAuthoritativeInformation$prime1(dictBody)(HTTPure_Headers.empty);
    };
};
var multipleChoices$prime = function (dictMonadAff) {
    var response$prime1 = response$prime(dictMonadAff);
    return function (dictBody) {
        return response$prime1(dictBody)(HTTPure_Status.multipleChoices);
    };
};
var multipleChoices = function (dictMonadAff) {
    var multipleChoices$prime1 = multipleChoices$prime(dictMonadAff);
    return function (dictBody) {
        return multipleChoices$prime1(dictBody)(HTTPure_Headers.empty);
    };
};
var multiStatus$prime = function (dictMonadAff) {
    var response$prime1 = response$prime(dictMonadAff);
    return function (dictBody) {
        return response$prime1(dictBody)(HTTPure_Status.multiStatus);
    };
};
var multiStatus = function (dictMonadAff) {
    var multiStatus$prime1 = multiStatus$prime(dictMonadAff);
    return function (dictBody) {
        return multiStatus$prime1(dictBody)(HTTPure_Headers.empty);
    };
};
var movedPermanently$prime = function (dictMonadAff) {
    var response$prime1 = response$prime(dictMonadAff);
    return function (dictBody) {
        return response$prime1(dictBody)(HTTPure_Status.movedPermanently);
    };
};
var movedPermanently = function (dictMonadAff) {
    var movedPermanently$prime1 = movedPermanently$prime(dictMonadAff);
    return function (dictBody) {
        return movedPermanently$prime1(dictBody)(HTTPure_Headers.empty);
    };
};
var internalServerError$prime = function (dictMonadAff) {
    var response$prime1 = response$prime(dictMonadAff);
    return function (dictBody) {
        return response$prime1(dictBody)(HTTPure_Status.internalServerError);
    };
};
var internalServerError = function (dictMonadAff) {
    var internalServerError$prime1 = internalServerError$prime(dictMonadAff);
    return function (dictBody) {
        return internalServerError$prime1(dictBody)(HTTPure_Headers.empty);
    };
};
var iMUsed$prime = function (dictMonadAff) {
    var response$prime1 = response$prime(dictMonadAff);
    return function (dictBody) {
        return response$prime1(dictBody)(HTTPure_Status.iMUsed);
    };
};
var iMUsed = function (dictMonadAff) {
    var iMUsed$prime1 = iMUsed$prime(dictMonadAff);
    return function (dictBody) {
        return iMUsed$prime1(dictBody)(HTTPure_Headers.empty);
    };
};
var found$prime = function (dictMonadAff) {
    var response$prime1 = response$prime(dictMonadAff);
    return function (dictBody) {
        return response$prime1(dictBody)(HTTPure_Status.found);
    };
};
var found = function (dictMonadAff) {
    var found$prime1 = found$prime(dictMonadAff);
    return function (dictBody) {
        return found$prime1(dictBody)(HTTPure_Headers.empty);
    };
};
var emptyResponse$prime = function (dictMonadAff) {
    var response$prime1 = response$prime(dictMonadAff)(HTTPure_Body.bodyString);
    return function (status) {
        return function (headers) {
            return response$prime1(status)(headers)("");
        };
    };
};
var expectationFailed$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.expectationFailed);
};
var expectationFailed = function (dictMonadAff) {
    return expectationFailed$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var failedDependency$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.failedDependency);
};
var failedDependency = function (dictMonadAff) {
    return failedDependency$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var forbidden$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.forbidden);
};
var forbidden = function (dictMonadAff) {
    return forbidden$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var gatewayTimeout$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.gatewayTimeout);
};
var gatewayTimeout = function (dictMonadAff) {
    return gatewayTimeout$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var gone$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.gone);
};
var gone = function (dictMonadAff) {
    return gone$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var hTTPVersionNotSupported$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.hTTPVersionNotSupported);
};
var hTTPVersionNotSupported = function (dictMonadAff) {
    return hTTPVersionNotSupported$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var imATeapot$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.imATeapot);
};
var imATeapot = function (dictMonadAff) {
    return imATeapot$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var insufficientStorage$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.insufficientStorage);
};
var insufficientStorage = function (dictMonadAff) {
    return insufficientStorage$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var lengthRequired$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.lengthRequired);
};
var lengthRequired = function (dictMonadAff) {
    return lengthRequired$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var locked$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.locked);
};
var locked = function (dictMonadAff) {
    return locked$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var loopDetected$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.loopDetected);
};
var loopDetected = function (dictMonadAff) {
    return loopDetected$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var methodNotAllowed$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.methodNotAllowed);
};
var methodNotAllowed = function (dictMonadAff) {
    return methodNotAllowed$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var misdirectedRequest$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.misdirectedRequest);
};
var misdirectedRequest = function (dictMonadAff) {
    return misdirectedRequest$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var networkAuthenticationRequired$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.networkAuthenticationRequired);
};
var networkAuthenticationRequired = function (dictMonadAff) {
    return networkAuthenticationRequired$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var noContent$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.noContent);
};
var noContent = function (dictMonadAff) {
    return noContent$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var notAcceptable$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.notAcceptable);
};
var notAcceptable = function (dictMonadAff) {
    return notAcceptable$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var notExtended$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.notExtended);
};
var notExtended = function (dictMonadAff) {
    return notExtended$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var notFound$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.notFound);
};
var notFound = function (dictMonadAff) {
    return notFound$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var notImplemented$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.notImplemented);
};
var notImplemented = function (dictMonadAff) {
    return notImplemented$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var notModified$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.notModified);
};
var notModified = function (dictMonadAff) {
    return notModified$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var payloadTooLarge$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.payloadTooLarge);
};
var payloadTooLarge = function (dictMonadAff) {
    return payloadTooLarge$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var paymentRequired$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.paymentRequired);
};
var paymentRequired = function (dictMonadAff) {
    return paymentRequired$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var preconditionFailed$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.preconditionFailed);
};
var preconditionFailed = function (dictMonadAff) {
    return preconditionFailed$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var preconditionRequired$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.preconditionRequired);
};
var preconditionRequired = function (dictMonadAff) {
    return preconditionRequired$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var processing$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.processing);
};
var processing = function (dictMonadAff) {
    return processing$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var proxyAuthenticationRequired$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.proxyAuthenticationRequired);
};
var proxyAuthenticationRequired = function (dictMonadAff) {
    return proxyAuthenticationRequired$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var rangeNotSatisfiable$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.rangeNotSatisfiable);
};
var rangeNotSatisfiable = function (dictMonadAff) {
    return rangeNotSatisfiable$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var requestHeaderFieldsTooLarge$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.requestHeaderFieldsTooLarge);
};
var requestHeaderFieldsTooLarge = function (dictMonadAff) {
    return requestHeaderFieldsTooLarge$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var requestTimeout$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.requestTimeout);
};
var requestTimeout = function (dictMonadAff) {
    return requestTimeout$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var resetContent$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.resetContent);
};
var resetContent = function (dictMonadAff) {
    return resetContent$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var serviceUnavailable$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.serviceUnavailable);
};
var serviceUnavailable = function (dictMonadAff) {
    return serviceUnavailable$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var switchingProtocols$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.switchingProtocols);
};
var switchingProtocols = function (dictMonadAff) {
    return switchingProtocols$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var tooManyRequests$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.tooManyRequests);
};
var tooManyRequests = function (dictMonadAff) {
    return tooManyRequests$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var uRITooLong$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.uRITooLong);
};
var uRITooLong = function (dictMonadAff) {
    return uRITooLong$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var unauthorized$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.unauthorized);
};
var unauthorized = function (dictMonadAff) {
    return unauthorized$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var unavailableForLegalReasons$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.unavailableForLegalReasons);
};
var unavailableForLegalReasons = function (dictMonadAff) {
    return unavailableForLegalReasons$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var unprocessableEntity$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.unprocessableEntity);
};
var unprocessableEntity = function (dictMonadAff) {
    return unprocessableEntity$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var unsupportedMediaType$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.unsupportedMediaType);
};
var unsupportedMediaType = function (dictMonadAff) {
    return unsupportedMediaType$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var upgradeRequired$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.upgradeRequired);
};
var upgradeRequired = function (dictMonadAff) {
    return upgradeRequired$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var variantAlsoNegotiates$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.variantAlsoNegotiates);
};
var variantAlsoNegotiates = function (dictMonadAff) {
    return variantAlsoNegotiates$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var emptyResponse = function (dictMonadAff) {
    var emptyResponse$prime1 = emptyResponse$prime(dictMonadAff);
    return function (status) {
        return emptyResponse$prime1(status)(HTTPure_Headers.empty);
    };
};
var created$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.created);
};
var created = function (dictMonadAff) {
    return created$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var continue$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status["continue"]);
};
var $$continue = function (dictMonadAff) {
    return continue$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var conflict$prime = function (dictMonadAff) {
    var response$prime1 = response$prime(dictMonadAff);
    return function (dictBody) {
        return response$prime1(dictBody)(HTTPure_Status.conflict);
    };
};
var conflict = function (dictMonadAff) {
    var conflict$prime1 = conflict$prime(dictMonadAff);
    return function (dictBody) {
        return conflict$prime1(dictBody)(HTTPure_Headers.empty);
    };
};
var badRequest$prime = function (dictMonadAff) {
    var response$prime1 = response$prime(dictMonadAff);
    return function (dictBody) {
        return response$prime1(dictBody)(HTTPure_Status.badRequest);
    };
};
var badRequest = function (dictMonadAff) {
    var badRequest$prime1 = badRequest$prime(dictMonadAff);
    return function (dictBody) {
        return badRequest$prime1(dictBody)(HTTPure_Headers.empty);
    };
};
var badGateway$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.badGateway);
};
var badGateway = function (dictMonadAff) {
    return badGateway$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var alreadyReported$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.alreadyReported);
};
var alreadyReported = function (dictMonadAff) {
    return alreadyReported$prime(dictMonadAff)(HTTPure_Headers.empty);
};
var accepted$prime = function (dictMonadAff) {
    return emptyResponse$prime(dictMonadAff)(HTTPure_Status.accepted);
};
var accepted = function (dictMonadAff) {
    return accepted$prime(dictMonadAff)(HTTPure_Headers.empty);
};
export {
    send,
    response,
    response$prime,
    emptyResponse,
    emptyResponse$prime,
    $$continue as continue,
    continue$prime,
    switchingProtocols,
    switchingProtocols$prime,
    processing,
    processing$prime,
    ok,
    ok$prime,
    created,
    created$prime,
    accepted,
    accepted$prime,
    nonAuthoritativeInformation,
    nonAuthoritativeInformation$prime,
    noContent,
    noContent$prime,
    resetContent,
    resetContent$prime,
    partialContent,
    partialContent$prime,
    multiStatus,
    multiStatus$prime,
    alreadyReported,
    alreadyReported$prime,
    iMUsed,
    iMUsed$prime,
    multipleChoices,
    multipleChoices$prime,
    movedPermanently,
    movedPermanently$prime,
    found,
    found$prime,
    seeOther,
    seeOther$prime,
    notModified,
    notModified$prime,
    useProxy,
    useProxy$prime,
    temporaryRedirect,
    temporaryRedirect$prime,
    permanentRedirect,
    permanentRedirect$prime,
    badRequest,
    badRequest$prime,
    unauthorized,
    unauthorized$prime,
    paymentRequired,
    paymentRequired$prime,
    forbidden,
    forbidden$prime,
    notFound,
    notFound$prime,
    methodNotAllowed,
    methodNotAllowed$prime,
    notAcceptable,
    notAcceptable$prime,
    proxyAuthenticationRequired,
    proxyAuthenticationRequired$prime,
    requestTimeout,
    requestTimeout$prime,
    conflict,
    conflict$prime,
    gone,
    gone$prime,
    lengthRequired,
    lengthRequired$prime,
    preconditionFailed,
    preconditionFailed$prime,
    payloadTooLarge,
    payloadTooLarge$prime,
    uRITooLong,
    uRITooLong$prime,
    unsupportedMediaType,
    unsupportedMediaType$prime,
    rangeNotSatisfiable,
    rangeNotSatisfiable$prime,
    expectationFailed,
    expectationFailed$prime,
    imATeapot,
    imATeapot$prime,
    misdirectedRequest,
    misdirectedRequest$prime,
    unprocessableEntity,
    unprocessableEntity$prime,
    locked,
    locked$prime,
    failedDependency,
    failedDependency$prime,
    upgradeRequired,
    upgradeRequired$prime,
    preconditionRequired,
    preconditionRequired$prime,
    tooManyRequests,
    tooManyRequests$prime,
    requestHeaderFieldsTooLarge,
    requestHeaderFieldsTooLarge$prime,
    unavailableForLegalReasons,
    unavailableForLegalReasons$prime,
    internalServerError,
    internalServerError$prime,
    notImplemented,
    notImplemented$prime,
    badGateway,
    badGateway$prime,
    serviceUnavailable,
    serviceUnavailable$prime,
    gatewayTimeout,
    gatewayTimeout$prime,
    hTTPVersionNotSupported,
    hTTPVersionNotSupported$prime,
    variantAlsoNegotiates,
    variantAlsoNegotiates$prime,
    insufficientStorage,
    insufficientStorage$prime,
    loopDetected,
    loopDetected$prime,
    notExtended,
    notExtended$prime,
    networkAuthenticationRequired,
    networkAuthenticationRequired$prime
};
