// Generated by purs version 0.15.10
import * as $foreign from "./foreign.js";
import * as Data_Functor_Contravariant from "../Data.Functor.Contravariant/index.js";
import * as Data_Op from "../Data.Op/index.js";
import * as Data_Options from "../Data.Options/index.js";
import * as Foreign from "../Foreign/index.js";
import * as Foreign_Object from "../Foreign.Object/index.js";
import * as Node_URL from "../Node.URL/index.js";
import * as Unsafe_Coerce from "../Unsafe.Coerce/index.js";
var RequestHeaders = function (x) {
    return x;
};
var IPV4 = /* #__PURE__ */ (function () {
    function IPV4() {

    };
    IPV4.value = new IPV4();
    return IPV4;
})();
var IPV6 = /* #__PURE__ */ (function () {
    function IPV6() {

    };
    IPV6.value = new IPV6();
    return IPV6;
})();
var statusMessage = function ($8) {
    return $8.statusMessage;
};
var statusCode = function ($9) {
    return $9.statusCode;
};
var responseAsStream = Unsafe_Coerce.unsafeCoerce;
var requestFromURI = function ($10) {
    return $foreign.requestImpl(Foreign.unsafeToForeign(Node_URL.parse($10)));
};
var requestAsStream = Unsafe_Coerce.unsafeCoerce;
var request = function ($11) {
    return $foreign.requestImpl(Data_Options.options($11));
};
var rejectUnauthorized = /* #__PURE__ */ Data_Options.opt("rejectUnauthorized");
var protocol = /* #__PURE__ */ Data_Options.opt("protocol");
var port = /* #__PURE__ */ Data_Options.opt("port");
var path = /* #__PURE__ */ Data_Options.opt("path");
var method = /* #__PURE__ */ Data_Options.opt("method");
var key = /* #__PURE__ */ Data_Options.opt("key");
var httpVersion = function ($12) {
    return $12.httpVersion;
};
var hostname = /* #__PURE__ */ Data_Options.opt("hostname");
var headers$prime = function ($13) {
    return $13.headers;
};
var responseCookies = function (res) {
    return Foreign_Object.lookup("set-cookie")(headers$prime(res));
};
var responseHeaders = function (res) {
    return Foreign_Object["delete"]("set-cookie")(headers$prime(res));
};
var headers = /* #__PURE__ */ Data_Options.opt("headers");
var familyToOption = function (v) {
    if (v instanceof IPV4) {
        return 4;
    };
    if (v instanceof IPV6) {
        return 6;
    };
    throw new Error("Failed pattern match at Node.HTTP.Client (line 105, column 1 - line 105, column 39): " + [ v.constructor.name ]);
};
var family = /* #__PURE__ */ Data_Functor_Contravariant.cmap(Data_Op.contravariantOp)(familyToOption)(/* #__PURE__ */ Data_Options.opt("family"));
var cert = /* #__PURE__ */ Data_Options.opt("cert");
var auth = /* #__PURE__ */ Data_Options.opt("auth");
export {
    setTimeout
} from "./foreign.js";
export {
    RequestHeaders,
    IPV4,
    IPV6,
    protocol,
    hostname,
    port,
    method,
    path,
    headers,
    auth,
    key,
    cert,
    rejectUnauthorized,
    family,
    request,
    requestFromURI,
    requestAsStream,
    responseAsStream,
    httpVersion,
    responseHeaders,
    responseCookies,
    statusCode,
    statusMessage
};
